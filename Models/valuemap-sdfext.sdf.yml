---
info: 
  title: Value Mapping object 
  version: 2022-03-25
  copyright: "Copyright 2021, 2022 Michael J. Koster. All rights reserved."
  license: "https://github.com/one-data-model/oneDM/blob/master/LICENSE"

namespace: 
  flo: https://onedm.org/objectflow

defaultnamespace: flo

sdfData:
  # add this ObjectType ID to the TypeID registry
  TypeID:
    ObjectType:
      ValueMap: { const: 43010 }
    ResourceType:
      FloatValue: { const: 27008 }
      ScaleMinimum: { const: 27009 }
      ScaleMaximum: { const: 27010 }
      Unit: { const: 27011 }

sdfProperty:
  FloatValue:
    sdfRef: /#/sdfThing/ObjectFlowResource
    oma:id: { sdfRef: /#/sdfData/TypeID/ResourceType/FloatValue/const }
    flo:meta: 
      ValueType: { sdfRef: /#/sdfData/ValueType/sdfChoice/FloatType }
    minInstances: 0

  # Resource to hold the Minimum value for the scale referred to in Unit
  ScaleMinimum:
    sdfRef: /#/sdfThing/ObjectFlowResource
    oma:id: { sdfRef: /#/sdfData/TypeID/ResourceType/ScaleMinimum/const }
    flo:meta: 
      ValueType: { sdfRef: /#/sdfData/ValueType/sdfChoice/FloatType }

  # Resource to hold the Maximum value for the scale referred to in Unit
  ScaleMaximum:
    sdfRef: /#/sdfThing/ObjectFlowResource
    oma:id: { sdfRef: /#/sdfData/TypeID/ResourceType/ScaleMaximum/const }
    flo:meta: 
      ValueType: { sdfRef: /#/sdfData/ValueType/sdfChoice/FloatType }

  # Unit Resource, to indicate engineering unit, using the senML unit system
  Unit:
    sdfRef: /#/sdfThing/ObjectFlowResource
    oma:id: { sdfRef: /#/sdfData/TypeID/ResourceType/Unit/const }
    flo:meta: 
      ValueType: { sdfRef: /#/sdfData/ValueType/sdfChoice/StringType }

  # ValueMap Object
  ValueMap:
    sdfRef: /#/sdfThing/ObjectFlowObject
    oma:id: { sdfRef: /#/sdfData/TypeID/ResourceType/ValueMap/const }

    # ValueMap Object Resources
    sdfRequired:
      - /#/sdfThing/ValueMap/sdfThing/InputValue
      - /#/sdfThing/ValueMap/sdfThing/CurrentValue
      - /#/sdfThing/ValueMap/sdfThing/InputLowScale
      - /#/sdfThing/ValueMap/sdfThing/InputHighScale
      - /#/sdfThing/ValueMap/sdfThing/CurrentLowScale
      - /#/sdfThing/ValueMap/sdfThing/CurrentHighScale
      - /#/sdfThing/ValueMap/sdfThing/CurrentValueMinimum
      - /#/sdfThing/ValueMap/sdfThing/CurrentValueMaximum
      - /#/sdfThing/ValueMap/sdfThing/CurrentValueUnit

    sdfProperty:
      InputValue:
        sdfRef: /#/sdfThing/ObjectFlowObject/sdfProperty/InputValue
        required: true

      CurrentValue:
        sdfRef: /#/sdfThing/ObjectFlowObject/sdfProperty/CurrentValue
        required: true

      InputLowScale:
        sdfRef: /#/sdfProperty/FloatValue
        required: true

      InputHighScale:
        sdfRef: /#/sdfProperty/FloatValue
        required: true

      CurrentLowScale:
        sdfRef: /#/sdfProperty/FloatValue
        required: true

      CurrentHighScale:
        sdfRef: /#/sdfProperty/FloatValue
        required: true

      CurrentValueMinimum:
        sdfRef: /#/sdfProperty/MinimumValue
        required: true

      CurrentValueMaximum:
        sdfRef: /#/sdfProperty/MaximumValue
        required: true
        
      CurrentValueUnit:
        sdfRef: /#/sdfProperty/Unit
        required: true


    sdfAction:
      OnDefaultValueUpdate: "Apply the dual slope-intercept conversion:
       CurrentValue = 
          ( InputValue - InputLowScale ) 
          * ( CurrentHighScale - CurrentLowScale ) / ( InputHighScale - InputLowScale )
          - CurrentLowScale
       clip the value between minimum and maximum, inclusive, update CurrentValue, call SyncToOutput"